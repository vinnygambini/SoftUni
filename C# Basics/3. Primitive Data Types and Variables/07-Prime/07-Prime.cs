// 07. Write an expression that checks if given positive integer number n (n ≤ 100) is prime. E.g. 37 is prime.

using System;

class Prime
{
    static void Main()
    {
        bool isPrime = true;
        for (int i = 2; i <= 100; i++)
        {
            for (int j = 2; j <= 100; j++)
            {
                if (i != j && i % j == 0) // ако не намерим число което не е равно на 2 (Пр) и в същото време не остава никакъв остатък при деление - втория loop свършва и принтираме, че числото е PRIME 
                {                         // ако намерим такова число - тогава прекъсваме вторичния цикъл и започваме да проверяваме следващото число, понеже вече знаем, че това число не е PRIME
                    isPrime = false;
                    break;
                }
            }
            if (isPrime)
            {
                Console.WriteLine("Prime:" + i);
            }
            isPrime = true;
        }
    }
}

// за да бъде Prime едно число то трябва да при деление с друго число винати да дава остатък. Тоест - всяко число, което не дава остатък при деление по модул - НЕ Е PRIME.!
// За това завъртаме първи цикъл които върти ПРОВЕРЯВАНИТЕ числа. При всяко завъртане на първия цикъл - въртим втори цикъл който прави проверка дали числото j е равно на проверяваното число И дали при деление се получава остатък.
// Ако числото НЕ е равно на проверяваното и в същото време при деление по модул - не остава остатък - то значи ПРОВЕРЯВАНОТО число не е PRIME.
// за това прекъсваме втория цикъл и преминаваме на следващото число от първичния цикъл.

// TODO - Sieve of Eratosthenes
